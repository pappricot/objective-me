{"ast":null,"code":"import _classCallCheck from \"/Users/anyanguyen/Desktop/simple-resume/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anyanguyen/Desktop/simple-resume/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anyanguyen/Desktop/simple-resume/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anyanguyen/Desktop/simple-resume/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anyanguyen/Desktop/simple-resume/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anyanguyen/Desktop/simple-resume/src/components/Work.js\";\nimport React, { Component } from \"react\";\nimport P5Wrapper from \"react-p5-wrapper\";\nimport ReactTypingEffect from \"react-typing-effect\";\nimport \"./Component.css\";\nvar width = window.innerWidth / 2;\nvar height = window.innerHeight;\n\nvar Work =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Work, _Component);\n\n  function Work() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Work);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Work)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.sketch1 = function (p) {\n      // TURTLE STUFF:\n      var x, y; // the current position of the turtle\n\n      var currentangle = 0; // which way the turtle is pointing\n\n      var step = 20; // how much the turtle moves with each 'F'\n\n      var angle = 90; // how much the turtle turns with a '-' or '+'\n      // LINDENMAYER STUFF (L-SYSTEMS)\n\n      var thestring = \"A\"; // \"axiom\" or start of the string\n\n      var numloops = 5; // how many iterations to pre-compute\n\n      var therules = []; // array for rules\n\n      therules[0] = [\"A\", \"-BF+AFA+FB-\"]; // first rule\n\n      therules[1] = [\"B\", \"+AF-BFB-FA+\"]; // second rule\n\n      var whereinstring = 0; // where in the L-system are we?\n\n      p.setup = function () {\n        p.createCanvas(width, height);\n        p.background(255);\n        p.stroke(0, 0, 0, 255); // start the x and y position at lower-left corner\n\n        x = 0;\n        y = height - 1; // COMPUTE THE L-SYSTEM\n\n        for (var i = 0; i < numloops; i++) {\n          thestring = lindenmayer(thestring);\n        }\n      };\n\n      p.draw = function () {\n        // draw the current character in the string:\n        drawIt(thestring[whereinstring]); // increment the point for where we're reading the string.\n        // wrap around at the end.\n\n        whereinstring++;\n        if (whereinstring > thestring.length - 1) whereinstring = 0;\n      }; // interpret an L-system\n\n\n      function lindenmayer(s) {\n        var outputstring = \"\"; // start a blank output string\n        // iterate through 'therules' looking for symbol matches:\n\n        for (var i = 0; i < s.length; i++) {\n          var ismatch = 0; // by default, no match\n\n          for (var j = 0; j < therules.length; j++) {\n            if (s[i] == therules[j][0]) {\n              outputstring += therules[j][1]; // write substitution\n\n              ismatch = 1; // we have a match, so don't copy over symbol\n\n              break; // get outta this for() loop\n            }\n          } // if nothing matches, just copy the symbol over.\n\n\n          if (ismatch == 0) outputstring += s[i];\n        }\n\n        return outputstring; // send out the modified string\n      } // this is a custom function that draws turtle commands\n\n\n      function drawIt(k) {\n        if (k == \"F\") {\n          // draw forward\n          // polar to cartesian based on step and currentangle:\n          var x1 = x + step * p.cos(p.radians(currentangle));\n          var y1 = y + step * p.sin(p.radians(currentangle));\n          p.line(x, y, x1, y1); // connect the old and the new\n          // update the turtle's position:\n\n          x = x1;\n          y = y1;\n        } else if (k == \"+\") {\n          currentangle += angle; // turn left\n        } else if (k == \"-\") {\n          currentangle -= angle; // turn right\n        } // give me some random color values:\n\n\n        var r = p.random(128, 255);\n        var g = p.random(0, 192);\n        var b = p.random(0, 50);\n        var a = p.random(50, 100); // pick a gaussian (D&D) distribution for the radius:\n\n        var radius = 0;\n        radius += p.random(0, 15);\n        radius += p.random(0, 15);\n        radius += p.random(0, 15);\n        radius = radius / 3; // draw the stuff:\n\n        p.fill(r, g, b, a);\n        p.ellipse(x, y, radius, radius);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Work, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"draw-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(P5Wrapper, {\n        className: \"p5\",\n        sketch: this.sketch1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Career path can also be zigzaggy\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"People have a notion of a career ladder, that skillsets and experiences should bring you up and up. And though I agree that patience and time perfects you at a skillset, it does not make you a well rounded person. And, as I experinced different educational background, I also experienced a difference in working culture.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), \"brr to be filled\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(ReactTypingEffect, {\n        text: \"sth deep here\",\n        eraseDelay: \"2500\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Work;\n}(Component);\n\nexport default Work;","map":{"version":3,"sources":["/Users/anyanguyen/Desktop/simple-resume/src/components/Work.js"],"names":["React","Component","P5Wrapper","ReactTypingEffect","width","window","innerWidth","height","innerHeight","Work","sketch1","p","x","y","currentangle","step","angle","thestring","numloops","therules","whereinstring","setup","createCanvas","background","stroke","i","lindenmayer","draw","drawIt","length","s","outputstring","ismatch","j","k","x1","cos","radians","y1","sin","line","r","random","g","b","a","radius","fill","ellipse"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport P5Wrapper from \"react-p5-wrapper\";\nimport ReactTypingEffect from \"react-typing-effect\";\nimport \"./Component.css\";\n\nconst width = window.innerWidth / 2;\nconst height = window.innerHeight;\n\nclass Work extends Component {\n  sketch1 = p => {\n    // TURTLE STUFF:\n    let x, y; // the current position of the turtle\n    let currentangle = 0; // which way the turtle is pointing\n    let step = 20; // how much the turtle moves with each 'F'\n    let angle = 90; // how much the turtle turns with a '-' or '+'\n\n    // LINDENMAYER STUFF (L-SYSTEMS)\n    let thestring = \"A\"; // \"axiom\" or start of the string\n    let numloops = 5; // how many iterations to pre-compute\n    let therules = []; // array for rules\n    therules[0] = [\"A\", \"-BF+AFA+FB-\"]; // first rule\n    therules[1] = [\"B\", \"+AF-BFB-FA+\"]; // second rule\n\n    let whereinstring = 0; // where in the L-system are we?\n\n    p.setup = function() {\n      p.createCanvas(width, height);\n      p.background(255);\n      p.stroke(0, 0, 0, 255);\n\n      // start the x and y position at lower-left corner\n      x = 0;\n      y = height - 1;\n\n      // COMPUTE THE L-SYSTEM\n      for (let i = 0; i < numloops; i++) {\n        thestring = lindenmayer(thestring);\n      }\n    };\n\n    p.draw = function() {\n      // draw the current character in the string:\n      drawIt(thestring[whereinstring]);\n\n      // increment the point for where we're reading the string.\n      // wrap around at the end.\n      whereinstring++;\n      if (whereinstring > thestring.length - 1) whereinstring = 0;\n    };\n\n    // interpret an L-system\n    function lindenmayer(s) {\n      let outputstring = \"\"; // start a blank output string\n\n      // iterate through 'therules' looking for symbol matches:\n      for (let i = 0; i < s.length; i++) {\n        let ismatch = 0; // by default, no match\n        for (let j = 0; j < therules.length; j++) {\n          if (s[i] == therules[j][0]) {\n            outputstring += therules[j][1]; // write substitution\n            ismatch = 1; // we have a match, so don't copy over symbol\n            break; // get outta this for() loop\n          }\n        }\n        // if nothing matches, just copy the symbol over.\n        if (ismatch == 0) outputstring += s[i];\n      }\n\n      return outputstring; // send out the modified string\n    }\n\n    // this is a custom function that draws turtle commands\n    function drawIt(k) {\n      if (k == \"F\") {\n        // draw forward\n        // polar to cartesian based on step and currentangle:\n        let x1 = x + step * p.cos(p.radians(currentangle));\n        let y1 = y + step * p.sin(p.radians(currentangle));\n        p.line(x, y, x1, y1); // connect the old and the new\n\n        // update the turtle's position:\n        x = x1;\n        y = y1;\n      } else if (k == \"+\") {\n        currentangle += angle; // turn left\n      } else if (k == \"-\") {\n        currentangle -= angle; // turn right\n      }\n\n      // give me some random color values:\n      let r = p.random(128, 255);\n      let g = p.random(0, 192);\n      let b = p.random(0, 50);\n      let a = p.random(50, 100);\n\n      // pick a gaussian (D&D) distribution for the radius:\n      let radius = 0;\n      radius += p.random(0, 15);\n      radius += p.random(0, 15);\n      radius += p.random(0, 15);\n      radius = radius / 3;\n\n      // draw the stuff:\n      p.fill(r, g, b, a);\n      p.ellipse(x, y, radius, radius);\n    }\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"draw-side\">\n          <P5Wrapper className=\"p5\" sketch={this.sketch1} />\n        </div>\n        <div className=\"text-side\">\n          <h3>Career path can also be zigzaggy</h3>\n          <p>\n            People have a notion of a career ladder, that skillsets and\n            experiences should bring you up and up. And though I agree that\n            patience and time perfects you at a skillset, it does not make you a\n            well rounded person. And, as I experinced different educational\n            background, I also experienced a difference in working culture.\n            <br />\n            <br />\n            brr to be filled\n            <br />\n            <br />\n            <br />\n            <br />\n            <ReactTypingEffect text=\"sth deep here\" eraseDelay=\"2500\" />\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Work;\n"]},"metadata":{},"sourceType":"module"}