{"ast":null,"code":"import _classCallCheck from \"/Users/anyanguyen/Desktop/simple-resume/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anyanguyen/Desktop/simple-resume/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anyanguyen/Desktop/simple-resume/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anyanguyen/Desktop/simple-resume/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anyanguyen/Desktop/simple-resume/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anyanguyen/Desktop/simple-resume/src/components/Education.js\";\nimport React, { Component } from \"react\";\nimport P5Wrapper from \"react-p5-wrapper\";\nimport ReactTypingEffect from \"react-typing-effect\";\nimport \"./Component.css\";\nvar width = window.innerWidth / 2;\nvar height = window.innerHeight;\n\nvar Education =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Education, _Component);\n\n  function Education() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Education);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Education)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.sketch1 = function (p) {\n      var theta;\n\n      p.setup = function () {\n        p.createCanvas(width, height);\n      };\n\n      p.draw = function () {\n        p.background(233, 97, 81);\n        p.frameRate(30);\n        p.stroke(255); // Let's pick an angle 0 to 90 degrees based on the mouse position\n\n        var a = p.mouseX / width * 90; // Convert it to radians\n\n        theta = p.radians(a); // Start the tree from the bottom of the screen\n\n        p.translate(width / 2, height / 1.5); // Draw a line 120 pixels\n\n        p.line(0, 0, 0, -120); // Move to the end of that line\n\n        p.translate(0, -120); // Start the recursive branching!\n\n        p.branch(120);\n      };\n\n      p.branch = function (h) {\n        // Each branch will be 2/3rds the size of the previous one\n        h *= 0.66; // All recursive functions must have an exit condition!!!!\n        // Here, ours is when the length of the branch is 2 pixels or less\n\n        if (h > 2) {\n          p.push(); // Save the current state of transformation (i.e. where are we now)\n\n          p.rotate(theta); // Rotate by theta\n\n          p.line(0, 0, 0, -h); // Draw the branch\n\n          p.translate(0, -h); // Move to the end of the branch\n\n          p.branch(h); // Ok, now call myself to draw two new branches!!\n\n          p.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n          // Repeat the same thing, only branch off to the \"left\" this time!\n\n          p.push();\n          p.rotate(-theta);\n          p.line(0, 0, 0, -h);\n          p.translate(0, -h);\n          p.branch(h);\n          p.pop();\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Education, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"draw-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(P5Wrapper, {\n        className: \"p5\",\n        sketch: this.sketch1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"What life has educated me..\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"brr\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), \"brr to be filled\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(ReactTypingEffect, {\n        text: \"sth deep here\",\n        eraseDelay: \"2500\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Education;\n}(Component);\n\nexport default Education;","map":{"version":3,"sources":["/Users/anyanguyen/Desktop/simple-resume/src/components/Education.js"],"names":["React","Component","P5Wrapper","ReactTypingEffect","width","window","innerWidth","height","innerHeight","Education","sketch1","p","theta","setup","createCanvas","draw","background","frameRate","stroke","a","mouseX","radians","translate","line","branch","h","push","rotate","pop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport P5Wrapper from \"react-p5-wrapper\";\nimport ReactTypingEffect from \"react-typing-effect\";\nimport \"./Component.css\";\n\nconst width = window.innerWidth / 2;\nconst height = window.innerHeight;\n\nclass Education extends Component {\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = { x: 0, y: 0 };\n  // }\n\n  // _onMouseMove(e) {\n  //   this.setState({ x: e.screenX, y: e.screenY });\n  // }\n\n  sketch1 = p => {\n    let theta;\n    p.setup = function() {\n      p.createCanvas(width, height);\n    };\n\n    p.draw = function() {\n      p.background(233, 97, 81);\n      p.frameRate(30);\n      p.stroke(255);\n      // Let's pick an angle 0 to 90 degrees based on the mouse position\n      let a = (p.mouseX / width) * 90;\n      // Convert it to radians\n      theta = p.radians(a);\n      // Start the tree from the bottom of the screen\n      p.translate(width / 2, height / 1.5);\n      // Draw a line 120 pixels\n      p.line(0, 0, 0, -120);\n      // Move to the end of that line\n      p.translate(0, -120);\n      // Start the recursive branching!\n      p.branch(120);\n    };\n\n    p.branch = function(h) {\n      // Each branch will be 2/3rds the size of the previous one\n      h *= 0.66;\n\n      // All recursive functions must have an exit condition!!!!\n      // Here, ours is when the length of the branch is 2 pixels or less\n      if (h > 2) {\n        p.push(); // Save the current state of transformation (i.e. where are we now)\n        p.rotate(theta); // Rotate by theta\n        p.line(0, 0, 0, -h); // Draw the branch\n        p.translate(0, -h); // Move to the end of the branch\n        p.branch(h); // Ok, now call myself to draw two new branches!!\n        p.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n\n        // Repeat the same thing, only branch off to the \"left\" this time!\n        p.push();\n        p.rotate(-theta);\n        p.line(0, 0, 0, -h);\n        p.translate(0, -h);\n        p.branch(h);\n        p.pop();\n      }\n    };\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"draw-side\">\n          <P5Wrapper className=\"p5\" sketch={this.sketch1} />\n        </div>\n        <div className=\"text-side\">\n          <h3>What life has educated me..</h3>\n          <p>\n            brr\n            <br />\n            <br />\n            brr to be filled\n            <br />\n            <br />\n            <br />\n            <br />\n            <ReactTypingEffect text=\"sth deep here\" eraseDelay=\"2500\" />\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Education;\n"]},"metadata":{},"sourceType":"module"}